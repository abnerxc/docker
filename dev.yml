version: '3'
networks:
  mynet:  #这里可以自定义名称 ，跟引用的地方一致就行
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24

services:
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./www/:/var/www/html/:rw
      - ./conf/nginx/conf.d:/etc/nginx/conf.d/:rw
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./log/nginx/:/var/log/nginx/:rw
    container_name: nginx
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    networks:
      mynet:
        ipv4_address: 172.18.0.50

  redis:
    image: redis:alpine
    container_name: redis
    privileged: true
    ports:
      - "6379:6379"
    command: redis-server --requirepass 123456
    networks:
      mynet:
        ipv4_address: 172.18.0.100

  memcached:
    image: memcached:alpine
    container_name: memcached
    privileged: true
    ports:
      - "11211:11211"
    networks:
      mynet:
        ipv4_address: 172.18.0.101

  mysql:
   image: mysql:8.0
   ports:
     - "3306:3306"
   volumes:
     - ./conf/mysql/my.cnf:/etc/mysql/my.cnf:ro
     - ./log/mysql/:/var/log/mysql/:rw
     - ./data/mysql/data/:/var/lib/mysql/:rw
     - ./data/mysql/mysql-files/:/var/lib/mysql-files:rw
   command:
     --default-authentication-plugin=mysql_native_password
     --innodb-flush-method=O_DSYNC
     --innodb-use-native-aio=0
     --log_bin=ON
   container_name: mysql
   privileged: true
   environment:
     MYSQL_ROOT_PASSWORD: 123456
   networks:
     mynet:
       ipv4_address: 172.18.0.102

  elasticsearch:
    image: elasticsearch:5.6.12-alpine
    container_name: es
    privileged: true
    environment:
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=http://172.18.0.105:1358,http://172.18.0.105:1358
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=false
      - discovery.zen.minimum_master_nodes=1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # 宿主机执行 sudo sysctl -w vm.max_map_count=262144
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      mynet:
        ipv4_address: 172.18.0.104

  dejavu:  # elasticsearch 浏览器管理界面
    image: appbaseio/dejavu:3.4.7
    container_name: dejavu
    privileged: true
    ports:
      - 1358:1358
    networks:
      mynet:
        ipv4_address: 172.18.0.105

  rabbitmq:
    image: rabbitmq:3.7.15-management-alpine
    container_name: rabbitmq
    privileged: true
    volumes:
      - ./data/rabbitmq/:/var/lib/rabbitmq  #数据存储目录
      - ./log/rabbitmq/:/var/log/rabbitmq #日志目录
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: 'vhost'
    ports:
      - "15672:15672"
      - "5672:5672"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      mynet:
        ipv4_address: 172.18.0.106


  etcd:
    image: bitnami/etcd
    container_name: etcd
    privileged: true
    ports:
      - "2379:2379"
      - "2380:2380"
    environment:
      ALLOW_NONE_AUTHENTICATION: yes
      ETCD_ADVERTISE_CLIENT_URLS: http://etcd-server:2379
    networks:
      mynet:
        ipv4_address: 172.18.0.107

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      mynet:
        ipv4_address: 172.18.0.120

  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 172.18.0.120:2181 #zookeeper服务地址 docker restart kafka2 kafka3 kafka4
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.18.0.122:9092 #kafka服务地址,ip和端口号要写对
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LOG_DIRS: /data/kafka-data
    volumes:
      - /data/kafka:/data/kafka-data
    restart: unless-stopped
    networks:
      mynet:
        ipv4_address: 172.18.0.122

  kafka3:
    image: wurstmeister/kafka
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 172.18.0.120:2181 #zookeeper服务地址
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.18.0.123:9093 #kafka服务地址
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_LOG_DIRS: /data/kafka-data
    volumes:
      - /data/kafka:/data/kafka-data
    restart: unless-stopped
    networks:
      mynet:
        ipv4_address: 172.18.0.123

  kafka4:
    image: wurstmeister/kafka
    container_name: kafka4
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 4
      KAFKA_ZOOKEEPER_CONNECT: 172.18.0.120:2181 #zookeeper服务地址
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.18.0.124:9094 #kafka服务地址
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_LOG_DIRS: /data/kafka-data
    volumes:
      - /data/kafka:/data/kafka-data
    restart: unless-stopped
    networks:
      mynet:
        ipv4_address: 172.18.0.124